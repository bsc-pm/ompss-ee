CC	= allmcc
CFLAGS	= --ompss -O3  --instrument

NVCC = nvcc
#send -arch=sm_13 to the cuda compiler
NVFLAGS	= --Wx:cuda:n,-arch=sm_13

# Intermediate files generated by the compiler (which are not removed when using -k flag)
COMP_FILES = $(CC)_*.*

OBJECTS = driver.o  check.o gendat.o prtspeed.o cclock.o matmul.o matmul_kernel.o 

#link everything into exec file
matmul: $(OBJECTS)
	$(CC) $(CFLAGS) -o matmul $(OBJECTS) $(LDFLAGS)

#compile host (c) code
driver.o: driver.c driver.h
	$(CC) $(CFLAGS) $(CUDAINC) -c driver.c

#compile host (c) code
check.o: check.c driver.h
	$(CC) $(CFLAGS) -c check.c

#compile host (c) code
gendat.o: gendat.c driver.h
	$(CC) $(CFLAGS) -c gendat.c

#compile host (c) code
prtspeed.o: prtspeed.c
	$(CC) $(CFLAGS) -c prtspeed.c
	
#compile host (c) code
cclock.o: cclock.c
	$(CC) $(CFLAGS) -c cclock.c

#compile host (c) code
matmul.o: matmul.c matmul_kernel.cuh driver.h
	$(CC) $(CFLAGS) $(CUDAINC) -c matmul.c $(NVFLAGS)

#compile kernels	
matmul_kernel.o: matmul_kernel.cu matmul_kernel.cuh
	$(NVCC) -arch=sm_13 -c matmul_kernel.cu

clean   :
	rm -f $(OBJECTS) $(COMP_FILES) matmul

wipe: clean
	$(RM) *.out *.err
	$(RM) *.prv *.row *.pcf
	$(RM) graph.dot graph.pdf
